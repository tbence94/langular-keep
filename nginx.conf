server {
    listen 443 ssl http2;

    server_name  ~^keep\.(.+)\.dev$;

    ssl_certificate /workspace/cert/dev.crt;
    ssl_certificate_key /workspace/cert/dev.key;

    root /workspace/langular-keep/public;

    etag on;
    gzip on;

    client_max_body_size 100M;

    index index.php;

    location / {
        try_files $uri /index.php?$query_string;
    }


    location ~ \index.php$ {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, ';
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        include fastcgi_params;

        fastcgi_param HTTP_PROXY "";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT     $realpath_root;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }
}

server {
    listen 80;

    server_name  ~^keep\.(.+)\.dev$;

    rewrite (.*) https://$host$request_uri;
}
